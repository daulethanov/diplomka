# Generated by Django 4.1.7 on 2023-03-02 04:32

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="University",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Университет")),
                (
                    "title",
                    models.CharField(max_length=100, verbose_name="Микро описани"),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=100, unique=True, verbose_name="Почта"
                    ),
                ),
                (
                    "contact_data",
                    models.CharField(max_length=255, verbose_name="Контактные данные"),
                ),
                ("description", models.TextField(verbose_name="Описание")),
                (
                    "special",
                    models.CharField(
                        choices=[
                            ("МАТ", "Математика"),
                            ("ФИЗ", "Физика"),
                            ("ИНФ", "Информатика"),
                            ("ХИМ", "Химия"),
                            ("БИО", "Биология"),
                            ("ГЕО", "География"),
                            ("ИСТ", "История"),
                            ("ЛИН", "Лингвистика"),
                            ("ФИЛ", "Философия"),
                            ("СОЦ", "Социология"),
                            ("ЭКО", "Экономика"),
                            ("ПОЛ", "Политология"),
                            ("ПСИ", "Психология"),
                            ("ЮРИ", "Юриспруденция"),
                            ("МЕН", "Менеджмент"),
                            ("МАР", "Маркетинг"),
                            ("ФИН", "Финансы"),
                            ("КОМ", "Компьютерные науки"),
                            ("ЭЛЕ", "Электроника"),
                            ("АВТ", "Автоматика"),
                            ("МЕХ", "Механика"),
                            ("СТР", "Строительство"),
                            ("АРХ", "Архитектура"),
                            ("ДИЗ", "Дизайн"),
                            ("ИЗО", "Изобразительное искусство"),
                            ("МУЗ", "Музыка"),
                            ("ТЕА", "Театральное искусство"),
                            ("КИН", "Кино и телевидение"),
                            ("ЖУР", "Журналистика"),
                            ("РЕК", "Реклама"),
                            ("ПУБ", "Паблик рилейшнз"),
                            ("ТУР", "Туризм"),
                            ("ГОС", "Государственное управление"),
                            ("НКО", "Некоммерческие организации"),
                            ("МЕЖ", "Международные отношения"),
                            ("МЕД", "Медицина"),
                            ("ФАР", "Фармация"),
                            ("ВЕТ", "Ветеринария"),
                            ("ПЕД", "Педагогика"),
                            ("ФИЗК", "Физическая культура"),
                            ("ТЕХ", "Технологии"),
                            ("АГР", "Агрономия"),
                            ("ЛЕС", "Лесное хозяйство"),
                            ("РАД", "Радиофизика"),
                            ("АСТР", "Астрономия"),
                            ("ГЕОЛ", "Геология"),
                            ("МЕТ", "Металлургия"),
                        ],
                        max_length=100,
                        verbose_name="Специальности",
                    ),
                ),
                (
                    "document",
                    models.FileField(upload_to="document", verbose_name="Документ"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("first_name", models.CharField(max_length=100, verbose_name="Имя")),
                (
                    "email",
                    models.EmailField(
                        max_length=230, unique=True, verbose_name="Email"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
    ]
